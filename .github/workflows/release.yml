name: Build CI

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  release_job:
    name: Creating release
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "date=$(date +'%d-%m-%Y')" >> $GITHUB_OUTPUT
#     - name: Generate Release Notes
#       uses: johnyherangi/create-release-notes@main
#       id: generate_changelog
#       with:
#         format: '- {{subject}}'
#       env:
#           GITHUB_TOKEN: ${{ github.token }}
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
            draft: false
            prerelease: false
            release_name: v${{ steps.date.outputs.date }}
            tag_name: v${{ steps.date.outputs.date }}
      env:
          GITHUB_TOKEN: ${{ github.token }}
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
    
  linux_job:
    needs: release_job
    name: Building for Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Setup premake
      uses: abel0b/setup-premake@v2.1
      with:
        version: "5.0.0-beta1"
    - name: Generating makefiles
      run: premake5 gmake2
    - name: Installing GTK3
      run: sudo apt-get install libgtk-3-dev
#     - name: Building..
#       run: make config=release_linux
    - uses: actions/upload-artifact@v3
      with:
        name: EMVParserToolLinux
        path: bin/Linux/Release/EmvParser
        retention-days: 2
    - name: Compressing...
      run: tar -zcvf EmvParserLinux.tar.gz premake5.lua
    - name: Upload Package
      uses: actions/upload-release-asset@v1
      with:
            upload_url: ${{ needs.release_job.outputs.upload_url }}
            asset_path: bin/Linux/Release/EmvParserLinux.tar.gz
            asset_name: EmvParserLinux.tar.gz
            asset_content_type: application/gzip
      env:
          GITHUB_TOKEN: ${{ github.token }}
  windows_job:
    needs: release_job
    name: Builiding for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: 'recursive'
      - name: Install premake5
        run: choco install premake5 --pre
      - name: Generating Visual Studio Solution
        run: premake5 vs2019
#       - name: Add msbuild (x86) to PATH
#         uses: microsoft/setup-msbuild@v1.1
#       - name: Build app for release 32bits
#         run: msbuild EmvParser.sln -t:rebuild -verbosity:diag -property:Configuration=Release -property:Platform=Win32
#       - name: Add msbuild (x64) to PATH
#         uses: microsoft/setup-msbuild@v1.1
#         with:
#           msbuild-architecture: x64
#       - name: Build app for release 64bits
#         run: msbuild EmvParser.sln -t:rebuild -verbosity:diag -property:Configuration=Release -property:Platform=Win64
#       - uses: actions/upload-artifact@v3
#         with:
#             name: EMVParserTool32
#             path: bin/Win32/Release/EmvParser.exe
#             retention-days: 2
#       - uses: actions/upload-artifact@v3
#         with:
#             name: EMVParserTool64
#             path: bin/Win64/Release/EmvParser.exe
#             retention-days: 2
      - name: Compressing for 32 bits
        run: 7z a -t7z -mx=9 EMVParserTool32.7z premake5.lua
      - name: Compressing for 64 bits
        run: 7z a -t7z -mx=9 EMVParserTool64.7z premake5.lua
      - name: Upload Package
        uses: actions/upload-release-asset@v1
        with:
            upload_url: ${{ needs.release_job.outputs.upload_url }}
            asset_path: EMVParserTool32.7z
            asset_name: EMVParserTool32.7z
            asset_content_type: application/x-7z-compressed
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Package
        uses: actions/upload-release-asset@v1
        with:
            upload_url: ${{ needs.release_job.outputs.upload_url }}
            asset_path: EMVParserTool64.7z
            asset_name: EMVParserTool64.7z
            asset_content_type: application/x-7z-compressed
        env:
          GITHUB_TOKEN: ${{ github.token }}
